Hi! can you generate a program in Python to create custom exceptions to handle
specific error cases when working with files. It ensures that your code gracefully
handles file-related errors and provides informative error messages.


class FileNotFoundErrorCustom(Exception):
    """Exception raised when a file is not found."""
    def __init__(self, filename):
        self.filename = filename
        super().__init__(f"File '{self.filename}' not found.")

class FileReadError(Exception):
    """Exception raised when a file cannot be read."""
    def __init__(self, filename):
        self.filename = filename
        super().__init__(f"Cannot read file '{self.filename}'. Please check permissions.")

class FileWriteError(Exception):
    """Exception raised when a file cannot be written to."""
    def __init__(self, filename):
        self.filename = filename
        super().__init__(f"Cannot write to file '{self.filename}'. Please check permissions.")

def read_file(filename):
    """Read the contents of a file."""
    try:
        with open(filename, 'r') as file:
            return file.read()
    except FileNotFoundError:
        raise FileNotFoundErrorCustom(filename)
    except IOError:
        raise FileReadError(filename)

def write_file(filename, content):
    """Write content to a file."""
    try:
        with open(filename, 'w') as file:
            file.write(content)
    except IOError:
        raise FileWriteError(filename)

def main():
    """Main function to demonstrate file operations."""
    while True:
        print("\nOptions:")
        print("1. Read a file")
        print("2. Write to a file")
        print("3. Quit")

        choice = input("Choose an option (1-3): ")

        if choice == '1':
            filename = input("Enter the filename to read: ")
            try:
                content = read_file(filename)
                print("\nFile Contents:")
                print(content)
            except (FileNotFoundErrorCustom, FileReadError) as e:
                print(e)

        elif choice == '2':
            filename = input("Enter the filename to write to: ")
            content = input("Enter the content to write: ")
            try:
                write_file(filename, content)
                print(f"Content written to '{filename}' successfully.")
            except FileWriteError as e:
                print(e)

        elif choice == '3':
            print("Exiting the program. Goodbye!")
            break

        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()